{"version":3,"sources":["DeleteButtonWithConfirmation.js","crossings.js","admin.js","res/logoRed.png","dashboard.js","authProvider.js","theme.js","Layout/CrossMenu.js","CrossLayout.js","res/background.jpg","theme/loginPage.js","fetch.js","map.js","customRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteButtonWithConfirmation","state","showDialog","handleClick","setState","handleCloseClick","handleDelete","event","preventDefault","props","dispatchCrudDelete","startUndoable","resource","record","basePath","redirect","undoable","crudDelete","id","this","label","classes","className","Button","onClick","classnames","deleteButton","Dialog","fullWidth","open","onClose","aria-label","DialogTitle","DialogContent","DialogActions","Component","defaultProps","compose","connect","translate","withStyles","theme","color","palette","error","main","backgroundColor","fade","CrossingEditActions","data","TopToolbar","ListButton","icon","CrossingCreateToolbar","Toolbar","SaveButton","submitOnEnter","variant","CrossingCreate","Create","toolbar","actions","SimpleForm","TextInput","source","validate","required","multiline","CrossingEdit","Edit","title","disabled","CrossingList","List","Datagrid","TextField","EditButton","AdminUserEditActions","AdminUserCreateToolbar","AdminUserCreate","PasswordInput","RadioButtonGroupInput","choices","name","AdminUserList","useStyles","makeStyles","root","flexGrow","paper","padding","spacing","textAlign","text","secondary","Grid","container","item","xs","Card","CardActionArea","CardMedia","style","justifyContent","display","src","logo","CardContent","login","a","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","decodedToken","decodeJwt","localStorage","setItem","permissions","logout","removeItem","Promise","resolve","checkError","checkAuth","getItem","reject","getPermissions","role","createMuiTheme","primary","red","contrastThreshold","tonalOffset","typography","fontFamily","join","overrides","MuiButton","CrossMenu","onMenuClick","usePermissions","loaded","console","log","isXSmall","useMediaQuery","breakpoints","down","useSelector","admin","ui","sidebarOpen","resources","getResources","MenuItemLink","to","primaryText","leftIcon","sidebarIsOpen","map","options","CrossLayout","Layout","menu","card","background","Login","backgroundImage","loginImage","fetchJson","url","requestHeaders","Accept","has","FormData","set","user","authenticated","o","parse","e","HttpError","message","Map","getData","res","ok","marker","catch","defaultPosition","crossLocations","position","points","MapContainer","center","zoom","height","width","TileLayer","attribution","crossLocation","Marker","latitude","longitude","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","Tooltip","locationName","exact","path","component","showNotification","NotificationManager","dataProvider","simpleRestProvider","App","Admin","loginPage","LoginPage","dashboard","Dashboard","authProvider","customRoutes","layout","Resource","list","edit","create","TrafficIcon","SupervisorAccountIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4af125fe.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport classnames from 'classnames';\nimport { translate, crudDelete, startUndoable } from 'ra-core';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { Button } from 'react-admin';\n\nconst styles = (theme) => ({\n  deleteButton: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n});\n\nclass DeleteButtonWithConfirmation extends Component {\n  state = {\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n  \n  handleDelete = (event) => {\n    event.preventDefault();\n    this.setState({ showDialog: false });\n    const { dispatchCrudDelete, startUndoable, resource, record, basePath, redirect, undoable } = this.props;\n    if (undoable) {\n      startUndoable(crudDelete(resource, record.id, record, basePath, redirect));\n    } else {\n      dispatchCrudDelete(resource, record.id, record, basePath, redirect);\n    }\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { label = 'ra.action.delete', classes = {}, className } = this.props;\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n          <ActionDelete />\n        </Button>\n        <Dialog fullWidth open={showDialog} onClose={this.handleCloseClick} aria-label=\"Are you sure?\">\n          <DialogTitle>Are you sure you want to delete this entity?</DialogTitle>\n          <DialogContent>\n            <div>\n              Your actions will be logged.\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDelete} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n              <ActionDelete />\n            </Button>\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nDeleteButtonWithConfirmation.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  dispatchCrudDelete: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string.isRequired,\n  startUndoable: PropTypes.func,\n  translate: PropTypes.func,\n  undoable: PropTypes.bool\n};\n\nDeleteButtonWithConfirmation.defaultProps = {\n  redirect: 'list',\n  undoable: true\n};\n\nexport default compose(\n  connect(\n    null,\n    { startUndoable, dispatchCrudDelete: crudDelete }\n  ),\n  translate,\n  withStyles(styles)\n)(DeleteButtonWithConfirmation);\n","import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  SimpleForm,\r\n  TextInput,\r\n  Edit,\r\n  Create,\r\n  TopToolbar, ListButton, required,\r\n  SaveButton,\r\n  Toolbar\r\n} from 'react-admin'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport DeleteButtonWithConfirmation from './DeleteButtonWithConfirmation';\r\n\r\nconst CrossingEditActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n  </TopToolbar>\r\n);\r\nconst CrossingCreateToolbar = props => (\r\n  <Toolbar {...props}>\r\n      \r\n      <SaveButton\r\n          label=\"crossings.action.save_and_add\"\r\n          redirect={false}\r\n          submitOnEnter={false}\r\n          variant=\"flat\"\r\n      />\r\n      \r\n  </Toolbar>\r\n);\r\n\r\nexport const CrossingCreate = (props) => {\r\n  return(\r\n  <Create toolbar={<CrossingCreateToolbar/>} actions={<CrossingEditActions />} {...props} >\r\n    <SimpleForm >\r\n      <TextInput source='id' label='Switch ID' validate={required()} />\r\n      <TextInput source='crossingFrom' label='crossingFrom' validate={required()} />\r\n      <TextInput source='crossingTo' label='crossingTo' validate={required()} />\r\n      <TextInput source='locationName' label='locationName' validate={required()} />\r\n      <TextInput source='latitude' label='latitude' validate={required()} />\r\n      <TextInput source='longitude' label='longitude' validate={required()}/>\r\n      <TextInput multiline source='notes' label='notes' />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n}\r\n\r\n\r\nexport const CrossingEdit = (props) => {\r\n  return (<Edit actions={<CrossingEditActions />} title='Post Edit' {...props}>\r\n    <SimpleForm>\r\n      <TextInput disabled label='switchID' source='id' />\r\n      <TextInput source='crossingFrom' label='crossingFrom' validate={required()}/>\r\n      <TextInput source='crossingTo' label='crossingTo' validate={required()} />\r\n      <TextInput source='locationName' label='locationName' validate={required()} />\r\n      <TextInput source='latitude' label='latitude' validate={required()} />\r\n      <TextInput source='longitude' label='longitude' validate={required()}/>\r\n      <TextInput multiline source='notes' label='notes' />\r\n    </SimpleForm>\r\n  </Edit>);\r\n\r\n}\r\n\r\nexport const CrossingList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source='id' label='Id' />\r\n      <TextField source='crossingFrom' label='CrossingFrom' />\r\n      <TextField source='crossingTo' label='CrossingTo' />\r\n      <TextField source='locationName' label='LocationName' />\r\n      <TextField source='latitude' label='Latitude' />\r\n      <TextField source='longitude' label='Longitude' />\r\n      <TextField source='notes' label='Notes' />\r\n      <EditButton />\r\n      <DeleteButtonWithConfirmation />\r\n    </Datagrid>\r\n  </List>\r\n)","import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  SimpleForm,\r\n  TextInput,\r\n  Edit,\r\n  Create,\r\n  TopToolbar, ListButton, required,\r\n  SaveButton,\r\n  Toolbar,\r\n  CheckboxGroupInput,\r\n  RadioButtonGroupInput,\r\n  PasswordInput,\r\n} from 'react-admin'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport DeleteButtonWithConfirmation from './DeleteButtonWithConfirmation';\r\n\r\nconst AdminUserEditActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n  </TopToolbar>\r\n);\r\nconst AdminUserCreateToolbar = props => (\r\n  <Toolbar {...props}>\r\n\r\n    <SaveButton\r\n      label=\"crossings.action.save_and_add\"\r\n      redirect={false}\r\n      submitOnEnter={false}\r\n      variant=\"flat\"\r\n    />\r\n\r\n  </Toolbar>\r\n);\r\n\r\nexport const AdminUserCreate = (props) => {\r\n  return (\r\n    <Create toolbar={<AdminUserCreateToolbar />} actions={<AdminUserEditActions />} {...props} >\r\n      <SimpleForm >\r\n        <TextInput source='username' label='Email' validate={required()} />\r\n        <PasswordInput source=\"password\" label='Password' validate={required()} />\r\n        <RadioButtonGroupInput\r\n          source=\"role\"\r\n          choices={[\r\n            { id: 'Admin', name: 'Admin' },\r\n            { id: 'Switch Installer', name: 'Switch Installer' }\r\n          ]}\r\n        />\r\n\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n}\r\n\r\n\r\nexport const AdminUserEdit = (props) => {\r\n  return (<Edit actions={<AdminUserEditActions />} title='Post Edit' {...props}>\r\n    <SimpleForm>\r\n      <TextInput disabled label='Email' source='username' />\r\n      <TextInput source='password' label='Password' validate={required()} />\r\n      <CheckboxGroupInput\r\n        source=\"role\"\r\n        choices={[\r\n          { id: 'admin', name: 'Admin' },\r\n          { id: 'installer', name: 'CROSS Switch Installer' }\r\n        ]}\r\n      />\r\n    </SimpleForm>\r\n  </Edit>);\r\n}\r\n\r\nexport const AdminUserList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField label='Email' source='id' />\r\n      <TextField label='Role' source='role' />\r\n      <DeleteButtonWithConfirmation />\r\n    </Datagrid>\r\n  </List>\r\n)\r\n\r\n","export default __webpack_public_path__ + \"static/media/logoRed.dacd7a0c.png\";","import * as React from \"react\";\r\nimport { Card, CardContent, CardMedia, CardActionArea } from '@material-ui/core';\r\nimport logo from \"./res/logoRed.png\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.paper}>\r\n                        <CardActionArea>\r\n                            <CardMedia style={{ justifyContent: \"center\", display: \"flex\" }} >\r\n                                <img src={logo} />\r\n                            </CardMedia>\r\n                            <CardContent>Welcome to the CROSS administration</CardContent>\r\n                        </CardActionArea>\r\n\r\n                    </Card>\r\n                </Grid>\r\n                {/* <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>xs=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>xs=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n","import decodeJwt from 'jwt-decode'\r\nexport default {\r\n    // called when the user attempts to log in\r\n    login: async ({ username, password }) => {\r\n        const request = new Request('https://crowdedcross.com/authenticate', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n\r\n            }),\r\n        });\r\n\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token }) => {\r\n                const decodedToken = decodeJwt(token);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('permissions', decodedToken.permissions);\r\n            });\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('permissions');\r\n        return Promise.resolve();\r\n    },\r\n    checkError: error => {\r\n        // ...\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    //authorization\r\n    getPermissions: () => {\r\n        const role = localStorage.getItem('permissions');\r\n        return role ? Promise.resolve(role) : Promise.reject();\r\n    }\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n    \r\n export const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: \"#b43f3f\"},\r\n        secondary: {main: \"#b43f3f\"},\r\n        error: red,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Arial',\r\n            'sans-serif',\r\n        ].join(','),\r\n    },\r\n    overrides: {\r\n        MuiButton: { // override the styles of all instances of this component\r\n            root: { // Name of the rule\r\n                color: 'white', // Some CSS\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\n","import {React} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { MenuItemLink, getResources, } from \"react-admin\";\r\nimport DefaultIcon from \"@material-ui/icons/ViewList\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PinDropIcon from '@material-ui/icons/PinDrop';\r\nimport { usePermissions } from 'react-admin';\r\n\r\nconst CrossMenu = ({ onMenuClick, logout }) => {\r\n    const { loaded, permissions } = usePermissions();\r\n    console.log('perm', permissions);\r\n    const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n    const open = useSelector((state) => state.admin.ui.sidebarOpen);\r\n    const resources = useSelector(getResources);\r\n    return loaded ? (\r\n        <div>\r\n            { <MenuItemLink\r\n                to=\"/\"\r\n                primaryText=\"Home\"\r\n                leftIcon={<HomeIcon />}\r\n                onClick={onMenuClick}\r\n                sidebarIsOpen={open}\r\n            /> }\r\n            {resources.map((resource) => (\r\n                <MenuItemLink\r\n                    key={resource.name}\r\n                    to={`/${resource.name}`}\r\n                    primaryText={\r\n                        (resource.options && resource.options.label) || resource.name\r\n                    }\r\n                    leftIcon={resource.icon ? <resource.icon /> : <DefaultIcon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                />\r\n            ))}\r\n            <MenuItemLink\r\n                to=\"map\"\r\n                primaryText=\"CROSS Locations Map\"\r\n                leftIcon={<PinDropIcon />}\r\n                onClick={onMenuClick}\r\n            />\r\n\r\n            {isXSmall && logout}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default CrossMenu;","import { Layout } from 'react-admin';\r\nimport CrossMenu from './Layout/CrossMenu';\r\n\r\nexport const CrossLayout = (props) => <Layout\r\n    {...props}\r\n    //appBar={CrossAppBar}\r\n    //sidebar={CrossSidebar}\r\n    menu={CrossMenu}\r\n//notification={CrossNotification}\r\n/>;\r\n\r\n","export default __webpack_public_path__ + \"static/media/background.af3a3cc5.jpg\";","import * as React from 'react';\r\nimport { Login } from 'react-admin';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport loginImage from '../res/background.jpg';\r\n\r\nconst styles = ({\r\n    card: {\r\n        padding: '15px 0 15px 0',\r\n    },\r\n\r\n    icon: { background: '#b43f3f' },\r\n});\r\n\r\n\r\nconst LoginPage = props => (\r\n\r\n    <Login\r\n        backgroundImage={loginImage}\r\n        {...props}\r\n    />\r\n\r\n);\r\nexport default withStyles(styles)(LoginPage);","import { HttpError } from 'react-admin';\r\n\r\nexport const fetchJson = async (url, options = {}) => {\r\n    const requestHeaders = (options.headers ||\r\n        new Headers({\r\n            Accept: 'application/json',\r\n        })\r\n    );\r\n    if (!requestHeaders.has('Content-Type') &&\r\n        !(options && options.body && options.body instanceof FormData)) {\r\n        requestHeaders.set('Content-Type', 'application/json');\r\n    }\r\n    if (options.user && options.user.authenticated && options.user.token) {\r\n        requestHeaders.set('Authorization', options.user.token);\r\n    }\r\n    \r\n    const response = await fetch(url, { ...options, headers: requestHeaders })\r\n    const text = await response.text()\r\n    \r\n    const o = {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers: response.headers,\r\n        body: text,\r\n    };\r\n    let status = o.status, statusText = o.statusText, headers = o.headers, body = o.body;\r\n    let json;\r\n    try {\r\n        json = JSON.parse(body);\r\n    } catch (e) {\r\n        // not json, no big deal\r\n    }\r\n    if (status < 200 || status >= 300) {\r\n        return Promise.reject(new HttpError((json && json.error && json.error.message) || statusText, status, json));\r\n    }\r\n    return Promise.resolve({ status: status, headers: headers, body: body, json: json });\r\n};","import React, { Component } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Tooltip } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\r\nimport { Icon } from 'leaflet'\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      defaultPosition: [53.80127, -1.548567], // UK position\r\n      crossLocations: [\r\n        {\r\n          title: \"leeds\",\r\n          position: [53.80127, -1.548567]\r\n        },\r\n        {\r\n          title: \"kirkstall\",\r\n          position: [53.84127, -1.528567]\r\n        },\r\n      ],\r\n      marker: null,\r\n    }\r\n  }\r\n\r\n  getData = () => fetch(\"https://crowdedcross.com/crossings/crossingList\")\r\n    .then(res => {\r\n      if (!res.ok) throw new Error(res.status);\r\n      else return res.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({ marker: data }, () => {\r\n      });\r\n    })\r\n    .catch(error => {\r\n      if (error) {\r\n        console.log(error);\r\n        //perform the redirection to the network request slow page or set state to show error\r\n        // Alert.alert(\r\n        //     'Sorry, something went wrong. Please try again',\r\n        //     error.message,\r\n        //     [\r\n        //         {\r\n        //             text: 'Cancel',\r\n        //         },\r\n        //         {\r\n        //             text: 'Try Again',\r\n        //             onPress: this.getData,\r\n        //         },\r\n        //     ]\r\n        // );\r\n      }\r\n    });\r\n\r\n  componentWillMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.marker == null) {\r\n      return (\r\n        <h1> Loading </h1>\r\n      );\r\n    }\r\n    const points = this.state.marker;\r\n\r\n    return (\r\n      <MapContainer\r\n        center={this.state.defaultPosition}\r\n        zoom={13}\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {points.map((crossLocation) => (\r\n          <Marker\r\n            key={crossLocation.locationName}\r\n            position={[crossLocation.latitude, crossLocation.longitude]}\r\n            icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })}\r\n          >\r\n            <Tooltip>{crossLocation.locationName}</Tooltip>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import * as React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport Map from './map';\r\n\r\nexport default [\r\n    <Route exact path=\"/map\" component={Map} />,\r\n];","import * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport { CrossingList, CrossingEdit, CrossingCreate } from './crossings'\nimport { AdminUserCreate, AdminUserList } from './admin';\nimport Dashboard from './dashboard';\nimport authProvider from './authProvider';\nimport { theme } from './theme';\nimport { CrossLayout } from './CrossLayout';\nimport LoginPage from './theme/loginPage';\nimport { fetchJson } from './fetch';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport customRoutes from './customRoutes';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport TrafficIcon from \"@material-ui/icons/Traffic\";\n\nconst httpClient = (url, options = {}) => {\n  var token = localStorage.getItem('token');\n  options.user = {\n    authenticated: true,\n    token: token\n  };\n  return fetchJson(url, options)\n    .catch(error => {\n      showNotification(error);\n    });\n};\n\nconst showNotification = (error) => {\n  NotificationManager.error(error.message, error.name, 3000);\n\n}\n\nconst dataProvider = simpleRestProvider('https://crowdedcross.com', httpClient);\n\nconst App = () => (<Admin loginPage={LoginPage} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider} theme={theme} customRoutes={customRoutes} layout={CrossLayout}>\n  {permissions => [\n    <Resource name=\"crossings\" list={CrossingList} edit={CrossingEdit} create={CrossingCreate} icon={TrafficIcon} />,\n\n    permissions === \"Admin\" ? <Resource name=\"administrator\" list={AdminUserList} create={AdminUserCreate} icon={SupervisorAccountIcon} /> : null,\n    <div>\n      <NotificationContainer />\n    </div>\n\n  ]}\n\n</Admin>\n\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}