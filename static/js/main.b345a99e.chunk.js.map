{"version":3,"sources":["DeleteButtonWithConfirmation.js","crossings.js","admin.js","res/logoRed.png","dashboard.js","authProvider.js","theme.js","res/background.jpg","theme/loginPage.js","fetch.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteButtonWithConfirmation","state","showDialog","handleClick","setState","handleCloseClick","handleDelete","event","preventDefault","props","dispatchCrudDelete","startUndoable","resource","record","basePath","redirect","undoable","crudDelete","id","this","label","classes","className","Button","onClick","classnames","deleteButton","Dialog","fullWidth","open","onClose","aria-label","DialogTitle","DialogContent","DialogActions","Component","defaultProps","compose","connect","translate","withStyles","theme","color","palette","error","main","backgroundColor","fade","CrossingEditActions","data","TopToolbar","ListButton","icon","CrossingCreateToolbar","Toolbar","SaveButton","submitOnEnter","variant","CrossingCreate","Create","toolbar","actions","SimpleForm","TextInput","source","validate","required","multiline","CrossingEdit","Edit","title","disabled","CrossingList","List","Datagrid","TextField","EditButton","AdminUserEditActions","AdminUserCreateToolbar","AdminUserCreate","RadioButtonGroupInput","choices","name","AdminUserList","Card","CardActionArea","CardMedia","style","justifyContent","display","src","logo","CardContent","login","a","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","decodedToken","decodeJwt","localStorage","setItem","permissions","logout","removeItem","Promise","resolve","checkError","checkAuth","getItem","reject","getPermissions","role","console","log","createMuiTheme","primary","secondary","red","contrastThreshold","tonalOffset","typography","fontFamily","join","overrides","MuiButton","root","card","padding","background","Login","backgroundImage","loginImage","fetchJson","url","options","requestHeaders","Accept","has","FormData","set","user","authenticated","text","o","parse","e","HttpError","message","showNotification","NotificationManager","dataProvider","simpleRestProvider","catch","App","Admin","loginPage","LoginPage","dashboard","Dashboard","authProvider","Resource","list","edit","create","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b345a99e.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport classnames from 'classnames';\nimport { translate, crudDelete, startUndoable } from 'ra-core';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { SimpleForm, Button, DeleteButton, TextInput, LongTextInput, required } from 'react-admin';\n\nconst styles = (theme) => ({\n  deleteButton: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }\n});\n\nclass DeleteButtonWithConfirmation extends Component {\n  state = {\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n  \n  handleDelete = (event) => {\n    event.preventDefault();\n    this.setState({ showDialog: false });\n    const { dispatchCrudDelete, startUndoable, resource, record, basePath, redirect, undoable } = this.props;\n    if (undoable) {\n      startUndoable(crudDelete(resource, record.id, record, basePath, redirect));\n    } else {\n      dispatchCrudDelete(resource, record.id, record, basePath, redirect);\n    }\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { label = 'ra.action.delete', classes = {}, className } = this.props;\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n          <ActionDelete />\n        </Button>\n        <Dialog fullWidth open={showDialog} onClose={this.handleCloseClick} aria-label=\"Are you sure?\">\n          <DialogTitle>Are you sure you want to delete this entity?</DialogTitle>\n          <DialogContent>\n            <div>\n              Your actions will be logged.\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDelete} label={label} className={classnames('ra-delete-button', classes.deleteButton, className)} key=\"button\">\n              <ActionDelete />\n            </Button>\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nDeleteButtonWithConfirmation.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  dispatchCrudDelete: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string.isRequired,\n  startUndoable: PropTypes.func,\n  translate: PropTypes.func,\n  undoable: PropTypes.bool\n};\n\nDeleteButtonWithConfirmation.defaultProps = {\n  redirect: 'list',\n  undoable: true\n};\n\nexport default compose(\n  connect(\n    null,\n    { startUndoable, dispatchCrudDelete: crudDelete }\n  ),\n  translate,\n  withStyles(styles)\n)(DeleteButtonWithConfirmation);\n","import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  SimpleForm,\r\n  TextInput,\r\n  Edit,\r\n  Create,\r\n  TopToolbar, ListButton, required,\r\n  SaveButton,\r\n  Toolbar\r\n} from 'react-admin'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport DeleteButtonWithConfirmation from './DeleteButtonWithConfirmation';\r\n\r\nconst CrossingEditActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n  </TopToolbar>\r\n);\r\nconst CrossingCreateToolbar = props => (\r\n  <Toolbar {...props}>\r\n      \r\n      <SaveButton\r\n          label=\"crossings.action.save_and_add\"\r\n          redirect={false}\r\n          submitOnEnter={false}\r\n          variant=\"flat\"\r\n      />\r\n      \r\n  </Toolbar>\r\n);\r\n\r\nexport const CrossingCreate = (props) => {\r\n  return(\r\n  <Create toolbar={<CrossingCreateToolbar/>} actions={<CrossingEditActions />} {...props} >\r\n    <SimpleForm >\r\n      <TextInput source='id' label='Switch ID' validate={required()} />\r\n      <TextInput source='crossingFrom' label='crossingFrom' validate={required()} />\r\n      <TextInput source='crossingTo' label='crossingTo' validate={required()} />\r\n      <TextInput source='locationName' label='locationName' validate={required()} />\r\n      <TextInput source='latitude' label='latitude' validate={required()} />\r\n      <TextInput source='longitude' label='longitude' validate={required()}/>\r\n      <TextInput multiline source='notes' label='notes' />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n}\r\n\r\n\r\nexport const CrossingEdit = (props) => {\r\n  return (<Edit actions={<CrossingEditActions />} title='Post Edit' {...props}>\r\n    <SimpleForm>\r\n      <TextInput disabled label='switchID' source='id' />\r\n      <TextInput source='crossingFrom' label='crossingFrom' validate={required()}/>\r\n      <TextInput source='crossingTo' label='crossingTo' validate={required()} />\r\n      <TextInput source='locationName' label='locationName' validate={required()} />\r\n      <TextInput source='latitude' label='latitude' validate={required()} />\r\n      <TextInput source='longitude' label='longitude' validate={required()}/>\r\n      <TextInput multiline source='notes' label='notes' />\r\n    </SimpleForm>\r\n  </Edit>);\r\n\r\n}\r\n\r\nexport const CrossingList = (props) => (\r\n  <List {...props}>\r\n    <Datagrid>\r\n      <TextField source='id' label='Id' />\r\n      <TextField source='crossingFrom' label='CrossingFrom' />\r\n      <TextField source='crossingTo' label='CrossingTo' />\r\n      <TextField source='locationName' label='LocationName' />\r\n      <TextField source='latitude' label='Latitude' />\r\n      <TextField source='longitude' label='Longitude' />\r\n      <TextField source='notes' label='Notes' />\r\n      <EditButton />\r\n      <DeleteButtonWithConfirmation />\r\n    </Datagrid>\r\n  </List>\r\n)","import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  SimpleForm,\r\n  TextInput,\r\n  Edit,\r\n  Create,\r\n  TopToolbar, ListButton, required,\r\n  SaveButton,\r\n  Toolbar,\r\n  CheckboxGroupInput,\r\n  RadioButtonGroupInput\r\n} from 'react-admin'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport DeleteButtonWithConfirmation from './DeleteButtonWithConfirmation';\r\n\r\nconst AdminUserEditActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n  </TopToolbar>\r\n);\r\nconst AdminUserCreateToolbar = props => (\r\n  <Toolbar {...props}>\r\n      \r\n      <SaveButton\r\n          label=\"crossings.action.save_and_add\"\r\n          redirect={false}\r\n          submitOnEnter={false}\r\n          variant=\"flat\"\r\n      />\r\n      \r\n  </Toolbar>\r\n);\r\n\r\nexport const AdminUserCreate = (props) => {\r\n  return(\r\n  <Create toolbar={<AdminUserCreateToolbar/>} actions={<AdminUserEditActions />} {...props} >\r\n    <SimpleForm >\r\n      <TextInput source='username' label='Email' validate={required()} />\r\n      <TextInput source='password' label='Password' validate={required()} />\r\n      <RadioButtonGroupInput\r\n      source=\"role\"\r\n      choices={[\r\n          { id: 'Admin', name: 'Admin' },\r\n          { id: 'Switch Installer', name: 'Switch Installer' }\r\n      ]}\r\n   />\r\n      \r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n}\r\n\r\n\r\nexport const AdminUserEdit = (props) => {\r\n  return (<Edit actions={<AdminUserEditActions />} title='Post Edit' {...props}>\r\n    <SimpleForm>\r\n      <TextInput disabled label='Email' source='username' />\r\n      <TextInput source='password' label='Password' validate={required()}/>\r\n      <CheckboxGroupInput\r\n                    source=\"role\"\r\n                    choices={[\r\n                        { id: 'admin', name: 'Admin' },\r\n                        { id: 'installer', name: 'CROSS Switch Installer' }\r\n                    ]}\r\n                />\r\n    </SimpleForm>\r\n  </Edit>);\r\n}\r\n\r\nexport const AdminUserList = (props) => (\r\n    <List {...props}>\r\n      <Datagrid>\r\n      <TextField  label='Email' source='id' />\r\n      <TextField  label='Role' source='role' />\r\n        <DeleteButtonWithConfirmation />\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n\r\n","export default __webpack_public_path__ + \"static/media/logoRed.dacd7a0c.png\";","import * as React from \"react\";\r\nimport { Card, CardContent, CardHeader, CardMedia, CardActionArea } from '@material-ui/core';\r\nimport logo from \"./res/logoRed.png\";\r\n\r\n\r\nexport default () => (\r\n\r\n    <Card>\r\n        <CardActionArea>\r\n            <CardMedia style = {{justifyContent: \"center\", display: \"flex\"}} >\r\n                <img src={logo}  />\r\n            </CardMedia>\r\n            <CardContent>Welcome to the CROSS administration</CardContent>\r\n        </CardActionArea>\r\n    </Card>\r\n);","import decodeJwt from 'jwt-decode'\r\nexport default {\r\n    // called when the user attempts to log in\r\n    login: async ({ username, password }) =>  {\r\n        const request = new Request('http://ec2-3-128-142-138.us-east-2.compute.amazonaws.com:3001/authenticate', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token }) => {\r\n                const decodedToken = decodeJwt(token);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('permissions', decodedToken.permissions);\r\n            });\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('permissions');\r\n        return Promise.resolve();\r\n    },\r\n    checkError: error => {\r\n        // ...\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    //authorization\r\n    getPermissions: () => {\r\n        const role = localStorage.getItem('permissions');\r\n        console.log(role);\r\n        return role ? Promise.resolve(role) : Promise.reject();\r\n    }\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n    \r\n export const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: \"#b43f3f\"},\r\n        secondary: {main: \"#b43f3f\"},\r\n        error: red,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Arial',\r\n            'sans-serif',\r\n        ].join(','),\r\n    },\r\n    overrides: {\r\n        MuiButton: { // override the styles of all instances of this component\r\n            root: { // Name of the rule\r\n                color: 'white', // Some CSS\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/background.af3a3cc5.jpg\";","import * as React from 'react';\r\nimport { Login } from 'react-admin';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport loginImage from '../res/background.jpg';\r\n\r\nconst styles = ({\r\n    card: {\r\n        padding: '15px 0 15px 0',\r\n    },\r\n\r\n    icon: { background: '#b43f3f' },\r\n});\r\n\r\n\r\nconst LoginPage = props => (\r\n\r\n    <Login\r\n        backgroundImage={loginImage}\r\n        {...props}\r\n    />\r\n\r\n);\r\nexport default withStyles(styles)(LoginPage);","import { HttpError } from 'react-admin';\r\n\r\nexport const fetchJson = async (url, options = {}) => {\r\n    const requestHeaders = (options.headers ||\r\n        new Headers({\r\n            Accept: 'application/json',\r\n        })\r\n    );\r\n    if (!requestHeaders.has('Content-Type') &&\r\n        !(options && options.body && options.body instanceof FormData)) {\r\n        requestHeaders.set('Content-Type', 'application/json');\r\n    }\r\n    if (options.user && options.user.authenticated && options.user.token) {\r\n        requestHeaders.set('Authorization', options.user.token);\r\n    }\r\n    const response = await fetch(url, { ...options, headers: requestHeaders })\r\n    const text = await response.text()\r\n    const o = {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers: response.headers,\r\n        body: text,\r\n    };\r\n    let status = o.status, statusText = o.statusText, headers = o.headers, body = o.body;\r\n    let json;\r\n    try {\r\n        json = JSON.parse(body);\r\n    } catch (e) {\r\n        // not json, no big deal\r\n    }\r\n    if (status < 200 || status >= 300) {\r\n        return Promise.reject(new HttpError((json && json.error && json.error.message) || statusText, status, json));\r\n    }\r\n    return Promise.resolve({ status: status, headers: headers, body: body, json: json });\r\n};","import * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport { CrossingList, CrossingEdit, CrossingCreate } from './crossings'\nimport {AdminUserCreate,AdminUserEdit,AdminUserList} from './admin';\nimport Dashboard from './dashboard';\nimport authProvider from './authProvider';\nimport { theme } from './theme';\nimport LoginPage from './theme/loginPage';\nimport { fetchJson } from './fetch';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager} from 'react-notifications';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  var token = localStorage.getItem('token');\n  options.headers.set('auth_token', token);\n  return fetchJson(url, options)\n    .catch(error => {\n      //alert(error);\n      showNotification(error);\n    });\n};\n\nconst showNotification = (error) => {\n  NotificationManager.error(error.message, error.name, 3000);\n\n}\n\nconst dataProvider = simpleRestProvider('http://ec2-3-128-142-138.us-east-2.compute.amazonaws.com:3001', httpClient);\n\nconst App = () => (<Admin loginPage={LoginPage} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider} theme={theme}>\n {permissions => [\n  <Resource name=\"crossings\" list={CrossingList} edit={CrossingEdit} create={CrossingCreate} />,\n\n  permissions === \"Admin\"?<Resource name=\"administrator\" list={AdminUserList}create={AdminUserCreate} />:null,\n  <div>\n  <NotificationContainer />\n</div>\n \n ]}\n  \n</Admin>\n\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}